apiVersion: apps/v1
kind: Deployment
metadata:
  name: capi-controller-manager
  namespace: capi-system
  labels:
    cluster.x-k8s.io/provider: cluster-api
    control-plane: controller-manager
    clusterctl.cluster.x-k8s.io: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: cluster-api
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: cluster-api
        control-plane: controller-manager
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: kube-rbac-proxy
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          ports:
            - name: https
              containerPort: 8443
        - name: manager
          image: us.gcr.io/k8s-artifacts-prod/cluster-api/cluster-api-controller:v0.3.16
          command:
            - /manager
          args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
            - --feature-gates=MachinePool=$(EXP_MACHINE_POOL),ClusterResourceSet=$(EXP_CLUSTER_RESOURCE_SET)
          ports:
            - name: healthz
              protocol: TCP
              containerPort: 9440
          env:
            - name: EXP_MACHINE_POOL
              value: "false"
            - name: EXP_CLUSTER_RESOURCE_SET
              value: "false"
          livenessProbe:
            httpGet:
              port: healthz
              path: /healthz
          readinessProbe:
            httpGet:
              port: healthz
              path: /readyz
          imagePullPolicy: IfNotPresent
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
