apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterresourcesets.addons.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/provider: cluster-api
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: "null"
spec:
  group: addons.cluster.x-k8s.io
  names:
    kind: ClusterResourceSet
    categories:
      - cluster-api
    listKind: ClusterResourceSetList
    plural: clusterresourcesets
    singular: clusterresourceset
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          type: object
          description: ClusterResourceSet is the Schema for the clusterresourcesets API
          properties:
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            metadata:
              type: object
            spec:
              type: object
              description: ClusterResourceSetSpec defines the desired state of ClusterResourceSet
              properties:
                strategy:
                  type: string
                  description: Strategy is the strategy to be used during applying resources. Defaults to ApplyOnce. This field is immutable.
                  enum:
                    - ApplyOnce
                resources:
                  type: array
                  description: Resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.
                  items:
                    type: object
                    description: ResourceRef specifies a resource.
                    properties:
                      name:
                        type: string
                        description: Name of the resource that is in the same namespace with ClusterResourceSet object.
                        minLength: 1
                      kind:
                        type: string
                        description: 'Kind of the resource. Supported kinds are: Secrets and ConfigMaps.'
                        enum:
                          - Secret
                          - ConfigMap
                    required:
                      - kind
                      - name
                clusterSelector:
                  type: object
                  description: Label selector for Clusters. The Clusters that are selected by this will be the ones affected by this ClusterResourceSet. It must match the Cluster labels. This field is immutable.
                  properties:
                    matchExpressions:
                      type: array
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        type: object
                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                        properties:
                          key:
                            type: string
                            description: key is the label key that the selector applies to.
                          operator:
                            type: string
                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          values:
                            type: array
                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                            items:
                              type: string
                        required:
                          - key
                          - operator
                    matchLabels:
                      type: object
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
              required:
                - clusterSelector
            status:
              type: object
              description: ClusterResourceSetStatus defines the observed state of ClusterResourceSet
              properties:
                conditions:
                  type: array
                  description: Conditions defines current state of the ClusterResourceSet.
                  items:
                    type: object
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      type:
                        type: string
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      status:
                        type: string
                        description: Status of the condition, one of True, False, Unknown.
                      lastTransitionTime:
                        type: string
                        description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                      message:
                        type: string
                        description: A human readable message indicating details about the transition. This field may be empty.
                      reason:
                        type: string
                        description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      severity:
                        type: string
                        description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                    required:
                      - status
                      - type
                observedGeneration:
                  type: integer
                  description: ObservedGeneration reflects the generation of the most recently observed ClusterResourceSet.
                  format: int64
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
