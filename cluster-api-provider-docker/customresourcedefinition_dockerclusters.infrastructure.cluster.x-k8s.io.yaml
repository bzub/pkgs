apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dockerclusters.infrastructure.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    cluster.x-k8s.io/v1alpha3: v1alpha3
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: DockerCluster
    categories:
      - cluster-api
    listKind: DockerClusterList
    plural: dockerclusters
    singular: dockercluster
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          type: object
          description: DockerCluster is the Schema for the dockerclusters API
          properties:
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            metadata:
              type: object
            spec:
              type: object
              description: DockerClusterSpec defines the desired state of DockerCluster.
              properties:
                controlPlaneEndpoint:
                  type: object
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    port:
                      type: integer
                      description: Port is the port on which the API server is serving.
                    host:
                      type: string
                      description: Host is the hostname on which the API server is serving.
                  required:
                    - host
                    - port
                failureDomains:
                  type: object
                  additionalProperties:
                    type: object
                    description: FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        type: object
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an infrastructure provider might use or require.
                      controlPlane:
                        type: boolean
                        description: ControlPlane determines if this failure domain is suitable for use by control plane machines.
                  description: FailureDomains are not usulaly defined on the spec. The docker provider is special since failure domains don't mean anything in a local docker environment. Instead, the docker cluster controller will simply copy these into the Status and allow the Cluster API controllers to do what they will with the defined failure domains.
            status:
              type: object
              description: DockerClusterStatus defines the observed state of DockerCluster.
              properties:
                conditions:
                  type: array
                  description: Conditions defines current service state of the DockerCluster.
                  items:
                    type: object
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      type:
                        type: string
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      status:
                        type: string
                        description: Status of the condition, one of True, False, Unknown.
                      lastTransitionTime:
                        type: string
                        description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                      message:
                        type: string
                        description: A human readable message indicating details about the transition. This field may be empty.
                      reason:
                        type: string
                        description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      severity:
                        type: string
                        description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                    required:
                      - status
                      - type
                failureDomains:
                  type: object
                  additionalProperties:
                    type: object
                    description: FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        type: object
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an infrastructure provider might use or require.
                      controlPlane:
                        type: boolean
                        description: ControlPlane determines if this failure domain is suitable for use by control plane machines.
                  description: FailureDomains don't mean much in CAPD since it's all local, but we can see how the rest of cluster API will use this if we populate it.
                ready:
                  type: boolean
                  description: Ready denotes that the docker cluster (infrastructure) is ready.
              required:
                - ready
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
