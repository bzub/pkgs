apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: taloscontrolplanes.controlplane.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/provider: controlplane-talos
    cluster.x-k8s.io/v1alpha3: v1alpha3
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/cacppt-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: controlplane.cluster.x-k8s.io
  names:
    kind: TalosControlPlane
    categories:
      - cluster-api
    listKind: TalosControlPlaneList
    plural: taloscontrolplanes
    shortNames:
      - tcp
    singular: taloscontrolplane
  scope: Namespaced
  versions:
    - name: v1alpha3
      additionalPrinterColumns:
        - name: Ready
          type: boolean
          description: TalosControlPlane API Server is ready to receive requests
          jsonPath: .status.ready
        - name: Initialized
          type: boolean
          description: This denotes whether or not the control plane has the uploaded talos-config configmap
          jsonPath: .status.initialized
        - name: Replicas
          type: integer
          description: Total number of non-terminated machines targeted by this control plane
          jsonPath: .status.replicas
        - name: Ready Replicas
          type: integer
          description: Total number of fully running and ready control plane machines
          jsonPath: .status.readyReplicas
        - name: Unavailable Replicas
          type: integer
          description: Total number of unavailable machines targeted by this control plane
          jsonPath: .status.unavailableReplicas
      schema:
        openAPIV3Schema:
          type: object
          description: TalosControlPlane is the Schema for the taloscontrolplanes API
          properties:
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            metadata:
              type: object
            spec:
              type: object
              description: TalosControlPlaneSpec defines the desired state of TalosControlPlane
              properties:
                replicas:
                  type: integer
                  description: Number of desired machines. Defaults to 1. When stacked etcd is used only odd numbers are permitted, as per [etcd best practice](https://etcd.io/docs/v3.3.12/faq/#why-an-odd-number-of-cluster-members). This is a pointer to distinguish between explicit zero and not specified.
                  format: int32
                controlPlaneConfig:
                  type: object
                  description: ControlPlaneConfig is a two TalosConfigSpecs to use for initializing and joining machines to the control plane.
                  properties:
                    controlplane:
                      type: object
                      description: TalosConfigSpec defines the desired state of TalosConfig
                      properties:
                        data:
                          type: string
                        configPatches:
                          type: array
                          items:
                            type: object
                            properties:
                              value:
                                x-kubernetes-preserve-unknown-fields: true
                              op:
                                type: string
                              path:
                                type: string
                            required:
                              - op
                              - path
                        generateType:
                          type: string
                        talosVersion:
                          type: string
                      required:
                        - generateType
                    init:
                      type: object
                      description: TalosConfigSpec defines the desired state of TalosConfig
                      properties:
                        data:
                          type: string
                        configPatches:
                          type: array
                          items:
                            type: object
                            properties:
                              value:
                                x-kubernetes-preserve-unknown-fields: true
                              op:
                                type: string
                              path:
                                type: string
                            required:
                              - op
                              - path
                        generateType:
                          type: string
                        talosVersion:
                          type: string
                      required:
                        - generateType
                  required:
                    - controlplane
                    - init
                infrastructureTemplate:
                  type: object
                  description: InfrastructureTemplate is a required reference to a custom resource offered by an infrastructure provider.
                  properties:
                    name:
                      type: string
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    namespace:
                      type: string
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    apiVersion:
                      type: string
                      description: API version of the referent.
                    kind:
                      type: string
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    fieldPath:
                      type: string
                      description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    resourceVersion:
                      type: string
                      description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    uid:
                      type: string
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                version:
                  type: string
                  description: Version defines the desired Kubernetes version.
                  minLength: 2
                  pattern: ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)([-0-9a-zA-Z_\.+]*)?$
              required:
                - controlPlaneConfig
                - infrastructureTemplate
                - version
            status:
              type: object
              description: TalosControlPlaneStatus defines the observed state of TalosControlPlane
              properties:
                replicas:
                  type: integer
                  description: Total number of non-terminated machines targeted by this control plane (their labels match the selector).
                  format: int32
                selector:
                  type: string
                  description: 'Selector is the label selector in string format to avoid introspection by clients, and is used to provide the CRD-based integration for the scale subresource and additional integrations for things like kubectl describe.. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                failureMessage:
                  type: string
                  description: ErrorMessage indicates that there is a terminal problem reconciling the state, and will be set to a descriptive error message.
                failureReason:
                  type: string
                  description: FailureReason indicates that there is a terminal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
                initialized:
                  type: boolean
                  description: Initialized denotes whether or not the control plane has the uploaded talos-config configmap.
                ready:
                  type: boolean
                  description: Ready denotes that the TalosControlPlane API Server is ready to receive requests.
                readyReplicas:
                  type: integer
                  description: Total number of fully running and ready control plane machines.
                  format: int32
                unavailableReplicas:
                  type: integer
                  description: Total number of unavailable machines targeted by this control plane. This is the total number of machines that are still required for the deployment to have 100% available capacity. They may either be machines that are running but not yet ready or machines that still have not been created.
                  format: int32
      served: true
      storage: true
      subresources:
        status: {}
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
